#!/usr/bin/env bash

set -eo pipefail

readonly alpha_ip="10.70.26.96"
readonly zeta_ip="10.70.26.88"
readonly alpha_nfs_dir="/media/alpha/4648e5ef-4c93-4b66-bb2f-c2fcf00c9cae/nfs/kubernetes"

readonly dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

bold() {
    echo "$(tput bold)$1$(tput sgr0)"
}

install() {
    local file=$1

    export PLSWORK_KUBERNETES_MASTER=${PLSWORK_KUBERNETES_MASTER:-0}
    export PLSWORK_KUBERNETES_MASTER_IP="${PLSWORK_KUBERNETES_MASTER_IP:-$alpha_ip}"
    export PLSWORK_KUBEADM_TOKEN="${PLSWORK_KUBEADM_TOKEN:-h3jajt.vz9z4uxxrw310p45}" # Generated with `kubeadm token generate`.
    #export PLSWORK_KUBEADM_TOKEN="${PLSWORK_KUBEADM_TOKEN:-abcdef.0123456789abcdef}"
    export PLSWORK_INGRESS_HTTP_PORT="${PLSWORK_INGRESS_HTTP_PORT:-80}"
    export PLSWORK_INGRESS_HTTPS_PORT="${PLSWORK_INGRESS_HTTPS_PORT:-443}"
    export PLSWORK_NFS_DIR="${PLSWORK_NFS_DIR:-$alpha_nfs_dir}"
    export PLSWORK_NFS_EXPORT_HOST="${PLSWORK_NFS_EXPORT_HOST:-*}"
    export PLSWORK_NFS_SERVER="${PLSWORK_NFS_SERVER:-$alpha_ip}"

    echo
    bold "##############################################################################"
    bold "    ${file}"
    bold "##############################################################################"
    echo
    ${dir}/${file}
}

install_master() {
    export PLSWORK_KUBERNETES_MASTER=1

    install "install/rp_filtering.sh"
    install "install/apt.sh"
    install "install/docker.sh"
    install "install/kubernetes_node.sh"
    install "install/helm.sh"
    install "install/kubernetes_ingress.sh"
    install "install/nfs.sh"
}

install_node() {
    install "install/rp_filtering.sh"
    install "install/apt.sh"
    install "install/docker.sh"
    install "install/kubernetes_node.sh"
    install "install/helm.sh"
}

install_polyaxon() {
    install "install/polyaxon_cert_manager.sh"
    install "install/polyaxon.sh"
}

usage() {
    echo "Usage:"
    echo "  $0 [flags]"
    echo "  $0 [command]"
    echo
    echo "Available Commands:"
    echo "  help        Help for $0."
    echo "  master      Provision Kubernetes master node."
    echo "  node        Provision Kubernetes node."
    echo "  polyaxon    Install Polyaxon on current Kubernetes cluster."
    echo
    echo "Flags:"
    echo "  -h, --help    Help for $0."
    echo
}

if [ $# -ne 1 ] ; then
    echo "error: expected single argument but have $#" >&2
    usage
    exit 1
fi

command=""

while [ $# -gt 0 ] ; do
    case "$1" in
        help|--help|-h) usage ; exit 0 ;;
        master|node|polyaxon) command="$1" ;;
        *) echo "error: unknown flag/command $1" >&2 ; usage ; exit 1;;
    esac
    shift
done

case $command in
    master) install_master ;;
    node) install_node ;;
    polyaxon) install_polyaxon ;;
    *) echo "error: unknown value for master $master" >&2 ; usage ; exit 1 ;;
esac
